spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: pi910812
    url: jdbc:mysql://127.0.0.1:3306/demo?characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true

    type: com.alibaba.druid.pool.DruidDataSource
    # 连接池的配置信息
    # 初始化大小，最小等待连接数量，最大等待连接数量，最大连接数
    initialSize: 1
    minIdle: 1
    maxIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: true
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: false
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #spring.datasource.useGlobalDataSourceStat=true

druid:
  allow: #允许登陆的IP地址
    ip: 127.0.0.1
  login: #登陆的账户密码
    user_name: root
    password: root

  jackson:
    default-property-inclusion: non_null

# 缓存时长，单位秒
cache:
  default-exp: 72

redis:
    host: 127.0.0.1
    port: 6379
    password:
    # 连接超时时间 单位 ms（毫秒）
    timeout: 3000
    database: 1
    jedis:
        pool:
          # 连接池中的最小空闲连接，默认值也是0
          min-idle: 0
          # 连接池中的最大空闲连接，默认值也是8
          max-idle: 100
          # 连接池最大连接数（使用负值表示没有限制）
          max-active: 8
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1

server:
  servlet:
    context-path: /mis

#logging:
#  pattern:
#    console: "%d - %msg%n"
#  path: /var/log/tomcat/
#  file: /var/log/tomcat/mis.log
#  level:
#    com.zgpi: trace

mybatis:
  mapper-locations: mapper/**/*.xml